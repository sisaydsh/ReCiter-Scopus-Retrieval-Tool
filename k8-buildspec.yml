---
version: 0.2
phases:
  install:
    commands:
      - curl -sS -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - export PATH=$PWD/:$PATH
      - apt-get -y install jq
  pre_build:
      commands:
        - TAG="$CODEBUILD_BUILD_NUMBER.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
        - echo $TAG
        - sed -i.bak -e 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' kubernetes/k8-deployment.yaml
        - echo "${CODEBUILD_WEBHOOK_HEAD_REF}"
        - |
          if expr "${CODEBUILD_WEBHOOK_HEAD_REF}" : ".*dev" >/dev/null; then
            sed -i.bak -e 's@NAMESPACE@'"reciter"'@' -e 's@ENVIRONMENT_LABEL@'"dev"'@' kubernetes/k8-deployment.yaml;
          fi
        - |
          if expr "${CODEBUILD_WEBHOOK_HEAD_REF}" : ".*master" >/dev/null; then
            sed -i.bak -e 's@NAMESPACE@'"reciter-prod"'@' -e 's@ENVIRONMENT_LABEL@'"prod"'@' kubernetes/k8-deployment.yaml;
          fi
        - $(aws ecr get-login --no-include-email)
        - export KUBECONFIG=$HOME/.kube/config
        - cat ./kubernetes/k8-deployment.yaml
  build:
    commands:
      - mvn clean install -Dmaven.test.skip=true
      - |
        if expr "${CODEBUILD_WEBHOOK_HEAD_REF}" : ".*master" >/dev/null || expr "${CODEBUILD_WEBHOOK_HEAD_REF}" : ".*dev" >/dev/null; then
          docker build --tag $REPOSITORY_URI:$TAG .
        fi

  post_build:
    commands:
      - |
        if expr "${CODEBUILD_WEBHOOK_HEAD_REF}" : ".*master" >/dev/null || expr "${CODEBUILD_WEBHOOK_HEAD_REF}" : ".*dev" >/dev/null; then
          docker push $REPOSITORY_URI:$TAG
          CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
          export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
          export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
          export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
          export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
          kubectl apply -f ./kubernetes/k8-deployment.yaml
          printf '[{"name":"k8-deployment.yaml","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json
        fi
artifacts:
  files: build.json